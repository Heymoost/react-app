{"version":3,"file":"static/js/754.f79d01bb.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProflieInfo/ProfileInfo.module.css?f854","components/Profile/ProflieInfo/ProfileStatusWithHooks.jsx","components/Profile/ProflieInfo/ProfileDataForm.jsx","components/Profile/ProflieInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MyPosts_item__Iv5ix\",\"postsBlock\":\"MyPosts_postsBlock__kfKzz\",\"posts\":\"MyPosts_posts__o2n-b\",\"postMessage\":\"MyPosts_postMessage__6C0aG\",\"btnMessage\":\"MyPosts_btnMessage__N3FMh\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__t5Zha\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n  return <div className={s.content}>\r\n    <div className={s.item}>\r\n      <img src='https://www.w3schools.com/w3images/avatar2.png' alt='' />\r\n      {props.message}\r\n      <div>\r\n        <span>Like</span> {props.likeCounts}\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nlet maxLength50 = maxLengthCreator(50);\n\n\nconst MyPosts = React.memo(props => {\n\n  let postsElement = props.posts.map( p => <Post key={p.id} message={p.message} likeCounts={p.likeCounts} />);\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n\n  return <div className={s.content}>\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <div>\n        <AddNewPostFormRedux onSubmit={onAddPost} />\n      </div>\n      <div className={s.posts}>\n        { postsElement }\n      </div>\n    </div>\n  </div>\n});\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field className={s.postMessage} component={Textarea} name=\"newPostText\" placeholder=\"Enter your message\" validate={[required, maxLength50]} type=\"text\" />\n      </div>\n      <div><button className={s.btnMessage}>Send</button></div>\n    </form>\n  )\n}\n\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"}) (AddNewPostForm);\n\nexport default MyPosts;","import { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\n\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsConteiner = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\n\nexport default MyPostsConteiner;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ProfileInfo_item__Gcha4\",\"userBlock\":\"ProfileInfo_userBlock__bzL6Z\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__hS0Zz\",\"aboutMe\":\"ProfileInfo_aboutMe__Zkuld\",\"photoBlock\":\"ProfileInfo_photoBlock__Agiwl\",\"userPhoto\":\"ProfileInfo_userPhoto__017xg\",\"userPhotoBlock\":\"ProfileInfo_userPhotoBlock__usHLG\",\"userPhotoHover\":\"ProfileInfo_userPhotoHover__ILU9Y\",\"imgReload\":\"ProfileInfo_imgReload__dMmvB\",\"inputBlock\":\"ProfileInfo_inputBlock__4bYPY\",\"inputFile\":\"ProfileInfo_inputFile__KAczU\",\"blockContacts\":\"ProfileInfo_blockContacts__Ex8mQ\",\"blockInfo\":\"ProfileInfo_blockInfo__-resB\",\"statusTittle\":\"ProfileInfo_statusTittle__co339\",\"statusInput\":\"ProfileInfo_statusInput__Lzuo9\"};","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport s from './ProfileInfo.module.css';\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect( () => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activeteEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactiveteEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  const onStatusChange = (e) => {\n    setStatus(e.target.value);\n  }\n\n  return (\n    <div>\n      {!editMode &&\n        <div>\n          <span className={s.statusTittle} onDoubleClick={activeteEditMode}>{props.status || 'Status'}</span>\n        </div>\n      }\n      {editMode &&\n        <div>\n          <input className={s.statusInput} onChange={onStatusChange} onBlur={deactiveteEditMode} autoFocus={true} value={status} />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Input, Textarea } from \"../../common/FormsControls/FormsControls\";\nimport s from './ProfileInfo.module.css';\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\n\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\n  return <form className={s.descriptionBlock} onSubmit={handleSubmit}>\n    <div className={s.blockAbout}>\n      <b>About me</b>\n      <ul className={s.blockInfo}>\n        <li><b>Full name:</b> <Field placeholder={\"Full name\"} name={\"fullName\"} component={Input} /></li>\n        <li><b>About me:</b><p className={s.aboutMe}><Field placeholder={\"About me\"} name={\"aboutMe\"} component={Textarea} /></p></li>\n        <li><b>Looking for a job:</b><Field name={\"lookingForAJob\"} component={Input} type={\"checkbox\"} /></li>\n        <li><b>My professional skills:</b><Field placeholder={\"My professional skills\"} name={\"lookingForAJobDescription\"} component={Textarea} /></li>\n      </ul>\n    </div>\n    <div>\n      <b>Contacts</b> <div className={s.blockInfo}>{Object.keys(profile.contacts).map(key => {\n        return <div key={key} className={s.blockContacts}>\n          <b>{key}: <Field placeholder={key} name={\"contacts.\" + key} component={Input} /></b>\n        </div>\n      })}</div>\n    </div>\n    <div><button>Save</button></div>\n    {error && <div className={style.formSummaryError}>\n        {error}\n      </div>}\n  </form>\n}\n\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\", enableReinitialize: true, destroyOnUnmount: false })(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport s from './ProfileInfo.module.css';\nimport userPhoto from \"../../../img/avatar.png\";\nimport photoReload from \"../../../img/reload.png\";\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport ProfileDataForm from './ProfileDataForm';\n\n\nconst ProfileInfo = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n\n  if (!props.profile) {\n    return <Preloader />\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      props.savePhoto(e.target.files[0])\n    }\n  }\n\n  const onSubmit = (formData) => {\n    props.saveProfile(formData).then(() => {\n      setEditMode(false);\n    })\n  }\n\n  return (\n    <div>\n      <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\n      <div className={s.userBlock}>\n        <div className={s.userPhotoBlock}>\n          <img src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto} className={s.userPhoto} alt=\"\" />\n          <div className={s.uploadInput}>{props.isOwner &&\n            <form method=\"post\" enctype=\"multipart/form-data\">\n              <label className={s.inputBlock}>\n                <input type={\"file\"} onChange={onMainPhotoSelected} name=\"file\" accept=\"image/png, image/jpeg\" className={s.inputFile} />\n                <span><img src={photoReload} className={s.imgReload} alt=\"\" /></span>\n                <div className={s.userPhotoHover}></div>\n              </label>\n            </form>\n          }\n          </div>\n        </div>\n        {editMode ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} /> : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={props.profile} isOwner={props.isOwner} />}\n\n      </div>\n    </div>\n  )\n}\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n  return <div className={s.descriptionBlock}>\n    <div className={s.blockAbout}>\n      <b>About me</b>\n      <ul className={s.blockInfo}>\n        <li><b>Full name:</b> {profile.fullName}</li>\n        <li><b>About me:</b> {profile.aboutMe}</li>\n        <li><b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}</li>\n        {profile.lookingForAJob &&\n          <li><b>My professional skills:</b> {profile.lookingForAJobDescription}</li>}\n      </ul>\n    </div>\n    <div>\n      <b>Contacts</b> <div className={s.blockInfo}>{Object.keys(profile.contacts).map(key => {\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n      })}</div>\n    </div>\n    {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\n  </div>\n}\n\nexport const Contact = ({ contactTitle, contactValue }) => {\n  return <div className={s.blockContacts}><b>{contactTitle}</b>: {contactValue}</div>\n}\n\n\nexport default ProfileInfo;","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProflieInfo/ProfileInfo';\n\nconst Profile = (props) => {\n\n  return (\n    <div >\n      <ProfileInfo savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} saveProfile={props.saveProfile} />\n      <MyPostsContainer />\n    </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n\n  refreshProfile() {\n    let userId = this.props.router.params.userId;\n    if (!userId) {\n      userId = this.props.authorisedUserId;\n      if (!userId) {\n        this.props.navigate.navigate('/login');\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId)\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.router.params.userId !== prevProps.router.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile {...this.props} isOwner={!this.props.router.params.userId} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} savePhoto={this.props.savePhoto} />\n    )\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorisedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n  function withRouter(Component) {\n\n    function ComponentWithRouterProp(props) {\n      let params = useParams();\n      let navigate = useNavigate();\n      return (\n        <Component\n          {...props}\n          router={{ params }}\n          navigate={{ navigate }}\n        />\n      );\n    }\n\n    return ComponentWithRouterProp;\n  }\n)(ProfileContainer);","import React from \"react\";\nimport style from \"./FormsControls.module.css\";\n\nconst FormControl = ({input, meta, child, ...props}) => {\n  const hasError = meta.touched && meta.error;\n\n  return (\n    <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\n      <div>\n        {props.children}\n      </div>\n      {hasError && <span>{meta.error}</span>}\n    </div>\n  )\n}\n\nexport const Textarea = (props) => {\n  const {input, meta, child, ...restProps} = props;\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n  const {input, meta, child, ...restProps} = props;\n  return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}","export const required = value => {\n  if (value) return undefined;\n  return \"Field is required\";\n}\n\n\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value.length > maxLength) return `Max lenght is ${maxLength} simbols`;\n  return undefined;\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__ZQHti\",\"error\":\"FormsControls_error__HG5mY\",\"formSummaryError\":\"FormsControls_formSummaryError__yRN3x\"};"],"names":["props","className","s","src","alt","message","likeCounts","maxLength50","maxLengthCreator","MyPosts","React","postsElement","posts","map","p","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","type","connect","state","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","target","value","onBlur","updateStatus","autoFocus","enableReinitialize","destroyOnUnmount","profile","error","Input","Object","keys","contacts","key","style","ProfileData","isOwner","goToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Contact","contactTitle","contactValue","onClick","Preloader","photos","large","userPhoto","method","enctype","files","length","savePhoto","accept","initialValues","formData","saveProfile","then","MyPostsContainer","ProfileContainer","userId","this","router","params","authorisedUserId","navigate","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","Component","useParams","useNavigate","FormControl","input","meta","child","hasError","touched","children","restProps","maxLength"],"sourceRoot":""}