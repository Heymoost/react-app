{"version":3,"file":"static/js/886.f6fda9f1.chunk.js","mappings":"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","sources":["components/hoc/withAuthRedirect.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate to={'/login/'} />;\n      return <Component {...this.props} />\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n}","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nlet maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component={Textarea} name=\"newMessageBody\" placeholder=\"Enter your message\" validate={[required, maxLength50]} type=\"text\" />\n      </div>\n      <div><button>Send</button></div>\n    </form>\n  )\n}\n\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__IW4Ue\",\"dialogsItems\":\"Dialogs_dialogsItems__KsSK3\",\"dialog\":\"Dialogs_dialog__IJr6W\",\"active\":\"Dialogs_active__Ifrod\",\"messages\":\"Dialogs_messages__BRzyw\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\nimport DialogItem from './DialogItem/DialogItem';\nimport s from './Dialogs.module.css';\nimport Message from './Message/Message';\n\n\nconst Dialogs = (props) => {\n\n  let state = props.dialogsPage;\n\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\n\n  let messagesElement = state.messages.map(m => <Message message={m.message} key={m.id} />)\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  }\n\n\n  if (!props.isAuth) return <Navigate to={'/login/'} />;\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>\n        {dialogsElements}\n      </div>\n      <div className={s.messages}>\n        <div>{messagesElement}</div>\n      </div>\n      <AddMessageForm onSubmit={addNewMessage} />\n    </div>\n  )\n}\n\nexport default Dialogs;","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { sendMassageCreator } from '../../redux/dialogs-reducer';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\nimport Dialogs from './Dialogs';\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMassageCreator(newMessageBody));\n    }\n  }\n}\n\n\nexport default compose(\n  connect (mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);","import React from \"react\";\nimport style from \"./FormsControls.module.css\";\n\nconst FormControl = ({input, meta, child, ...props}) => {\n  const hasError = meta.touched && meta.error;\n\n  return (\n    <div className={style.formControls + \" \" + (hasError ? style.error : \"\")}>\n      <div>\n        {props.children}\n      </div>\n      {hasError && <span>{meta.error}</span>}\n    </div>\n  )\n}\n\nexport const Textarea = (props) => {\n  const {input, meta, child, ...restProps} = props;\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n  const {input, meta, child, ...restProps} = props;\n  return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}","export const required = value => {\n  if (value) return undefined;\n  return \"Field is required\";\n}\n\n\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value.length > maxLength) return `Max lenght is ${maxLength} simbols`;\n  return undefined;\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__ZQHti\",\"error\":\"FormsControls_error__HG5mY\",\"formSummaryError\":\"FormsControls_formSummaryError__yRN3x\"};"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","maxLength50","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","type","className","s","to","id","message","dialogsPage","dialogsElements","dialogs","map","d","messagesElement","messages","m","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMassageCreator","Component","RedirectComponent","this","React","Dialogs","FormControl","input","meta","child","hasError","touched","error","style","children","restProps","Input","value","maxLength","length"],"sourceRoot":""}