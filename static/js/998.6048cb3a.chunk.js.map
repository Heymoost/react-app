{"version":3,"file":"static/js/998.6048cb3a.chunk.js","mappings":"oOACA,GAAgB,KAAO,sBAAsB,WAAa,4BAA4B,MAAQ,uBAAuB,YAAc,6BAA6B,WAAa,6BCA7K,GAAgB,KAAO,oB,SCevB,EAZa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAAA,QAAU,UAC/B,iBAAKD,UAAWC,EAAAA,KAAO,WACrB,gBAAKC,IAAI,iDAAiDC,IAAI,KAC7DJ,EAAMK,SACP,4BACE,mCAAiB,IAAEL,EAAMM,kBAIjC,E,uCCPIC,GAAcC,EAAAA,EAAAA,GAAiB,IAG7BC,EAAUC,EAAAA,MAAW,SAAAV,GAEzB,IAAIW,EAAeX,EAAMY,MAAMC,KAAK,SAAAC,GAAC,OAAI,SAAC,EAAI,CAACT,QAASS,EAAET,QAASC,WAAYQ,EAAER,YAAc,IAM/F,OAAO,gBAAKL,UAAWC,EAAAA,QAAU,UAC/B,iBAAKD,UAAWC,EAAAA,WAAa,WAC3B,sCACA,0BACE,SAACa,EAAmB,CAACC,SARX,SAACC,GACfjB,EAAMkB,QAAQD,EAAOE,YACvB,OAQI,gBAAKlB,UAAWC,EAAAA,MAAQ,SACpBS,QAIV,IAaMI,GAAsBK,EAAAA,EAAAA,GAAU,CAACC,KAAM,yBAAjBD,EAXL,SAACpB,GACtB,OACE,kBAAMgB,SAAUhB,EAAMsB,aAAa,WACjC,0BACE,SAACC,EAAA,EAAK,CAACtB,UAAWC,EAAAA,YAAesB,UAAWC,EAAAA,EAAUC,KAAK,cAAcC,YAAY,qBAAqBC,SAAU,CAACC,EAAAA,EAAUtB,GAAcuB,KAAK,YAEpJ,0BAAK,mBAAQ7B,UAAWC,EAAAA,WAAa,sBAG3C,IAIA,ICtBA,GAFyB6B,EAAAA,EAAAA,KAfH,SAACC,GACrB,MAAO,CACLpB,MAAOoB,EAAMC,YAAYrB,MACzBO,YAAaa,EAAMC,YAAYd,YAEnC,IAEyB,SAACe,GACxB,MAAO,CACLhB,QAAS,SAACC,GACRe,GAASC,EAAAA,EAAAA,IAAqBhB,GAChC,EAEJ,GAEyBY,CAA+CtB,G,UCnBxE,EAAoE,sCAApE,EAAiI,0CAAjI,EAAqL,6BAArL,EAA8N,+BAA9N,EAAyQ,+BAAzQ,EAAuT,kCAAvT,EAAuW,iC,oBC2CvW,EAvC+B,SAACT,GAE9B,OAA8BoC,EAAAA,EAAAA,WAAS,GAAM,eAAxCC,EAAQ,KAAEC,EAAW,KAC1B,GAA0BF,EAAAA,EAAAA,UAASpC,EAAMuC,QAAO,eAA3CA,EAAM,KAAEC,EAAS,MAEtBC,EAAAA,EAAAA,YAAW,WACTD,EAAUxC,EAAMuC,OAClB,GAAG,CAACvC,EAAMuC,SAeV,OACE,4BACIF,IACA,0BACE,iBAAMpC,UAAWC,EAAgBwC,cAjBhB,WACvBJ,GAAY,EACd,EAeyE,SAAEtC,EAAMuC,QAAU,aAGtFF,IACC,0BACE,kBAAOpC,UAAWC,EAAeyC,SAblB,SAACC,GACtBJ,EAAUI,EAAEC,OAAOC,MACrB,EAWmEC,OAlBxC,WACzBT,GAAY,GACZtC,EAAMgD,aAAaT,EACrB,EAe+FU,WAAW,EAAMH,MAAOP,QAKzH,ECFA,EAjCoB,SAACvC,GACnB,OAAKA,EAAMkD,SAKT,4BAIE,SAAC,EAAsB,CAACX,OAAQvC,EAAMuC,OAAQS,aAAchD,EAAMgD,gBAClE,iBAAK/C,UAAWC,EAAmB,WACjC,gBAAKC,IAAmC,MAA9BH,EAAMkD,QAAQC,OAAOC,MAAgBpD,EAAMkD,QAAQC,OAAOC,MAAQC,EAAWpD,UAAWC,EAAaE,IAAI,MACnH,iBAAKH,UAAWC,EAAuB,WACrC,cAAGD,UAAWC,EAAU,SAAEF,EAAMkD,QAAQI,WACxC,gBAAIrD,UAAWC,EAAY,WACzB,mCAAWF,EAAMkD,QAAQK,aACzB,uCAAevD,EAAMkD,QAAQM,SAASC,aACtC,sCAAczD,EAAMkD,QAAQM,SAASE,YACrC,iCAAS1D,EAAMkD,QAAQM,SAASG,OAChC,sCAAc3D,EAAMkD,QAAQM,SAASI,YACrC,wCAAgB5D,EAAMkD,QAAQM,SAASK,cACvC,sCAAc7D,EAAMkD,QAAQM,SAASM,YACrC,qCAAa9D,EAAMkD,QAAQM,SAASO,WACpC,uCAAe/D,EAAMkD,QAAQM,SAASQ,yBAtBvC,SAACC,EAAA,EAAS,GA4BrB,ECtBA,EAVgB,SAACjE,GAEf,OACE,4BACE,SAAC,EAAW,CAACkD,QAASlD,EAAMkD,QAASX,OAAQvC,EAAMuC,OAAQS,aAAchD,EAAMgD,gBAC/E,SAACkB,EAAgB,MAGvB,E,oBCJMC,EAAgB,qGAkBnB,OAlBmB,yCAEpB,WACE,IAAIC,EAASC,KAAKrE,MAAMsE,OAAOC,OAAOH,OAClCA,IACFA,EAASC,KAAKrE,MAAMwE,mBAElBH,KAAKrE,MAAMyE,SAASA,SAAS,UAGjCJ,KAAKrE,MAAM0E,eAAeN,GAC1BC,KAAKrE,MAAM2E,UAAUP,EACvB,GAAC,oBAED,WACE,OACE,SAAC,GAAO,kBAAKC,KAAKrE,OAAK,IAAEkD,QAASmB,KAAKrE,MAAMkD,QAASX,OAAQ8B,KAAKrE,MAAMuC,OAAQS,aAAcqB,KAAKrE,MAAMgD,eAE9G,KAAC,EAlBmB,CAAStC,EAAAA,WAmC/B,GAAekE,EAAAA,EAAAA,KACb7C,EAAAA,EAAAA,KAfoB,SAACC,GAAK,MAAM,CAChCkB,QAASlB,EAAMC,YAAYiB,QAC3BX,OAAQP,EAAMC,YAAYM,OAC1BiC,iBAAkBxC,EAAM6C,KAAKT,OAC7BU,OAAQ9C,EAAM6C,KAAKC,OACpB,GAUyB,CAACJ,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAW3B,aAAAA,EAAAA,MACpD,SAAoB+B,GAclB,OAZA,SAAiC/E,GAC9B,IAAIuE,GAASS,EAAAA,EAAAA,MACTP,GAAWQ,EAAAA,EAAAA,MACf,OACG,SAACF,GAAS,kBACJ/E,GAAK,IACTsE,OAAQ,CAAEC,OAAAA,GACVE,SAAU,CAACA,SAAAA,KAGnB,CAGF,GAjBF,CAkBEN,E,oNC1DIe,EAAc,SAAH,GAAU,EAALC,MAAmC,IAA5BC,EAAI,EAAJA,KAAgBpF,GAAL,EAALqF,OAAe,aAC1CC,EAAWF,EAAKG,SAAWH,EAAKI,MAEtC,OACE,iBAAKvF,UAAWwF,EAAAA,EAAAA,aAAqB,KAAOH,EAAWG,EAAAA,EAAAA,MAAc,IAAI,WACvE,yBACGzF,EAAM0F,WAERJ,IAAY,0BAAOF,EAAKI,UAG/B,EAEa/D,EAAW,SAACzB,GACvB,IAAOmF,EAAoCnF,EAApCmF,MAAuBQ,GAAa3F,EAA7BoF,KAA6BpF,EAAvBqF,OAAmB,OAAIrF,EAAK,IAChD,OAAO,SAACkF,GAAW,kBAAKlF,GAAK,cAAE,uCAAcmF,GAAWQ,MAC1D,EAEaC,EAAQ,SAAC5F,GACpB,IAAOmF,EAAoCnF,EAApCmF,MAAuBQ,GAAa3F,EAA7BoF,KAA6BpF,EAAvBqF,OAAmB,OAAIrF,EAAK,IAChD,OAAO,SAACkF,GAAW,kBAAKlF,GAAK,cAAE,oCAAWmF,GAAWQ,MACvD,C,8ECxBO,IAAM9D,EAAW,SAAAiB,GACtB,IAAIA,EACJ,MAAO,mBACT,EAIatC,EAAmB,SAACqF,GAAS,OAAK,SAAC/C,GAC9C,GAAIA,EAAMgD,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAS,WAEjE,CAAC,C,qBCTD,KAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wC","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProflieInfo/ProfileInfo.module.css?f854","components/Profile/ProflieInfo/ProfileStatusWithHooks.jsx","components/Profile/ProflieInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MyPosts_item__Iv5ix\",\"postsBlock\":\"MyPosts_postsBlock__kfKzz\",\"posts\":\"MyPosts_posts__o2n-b\",\"postMessage\":\"MyPosts_postMessage__6C0aG\",\"btnMessage\":\"MyPosts_btnMessage__N3FMh\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__t5Zha\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n  return <div className={s.content}>\r\n    <div className={s.item}>\r\n      <img src='https://www.w3schools.com/w3images/avatar2.png' alt='' />\r\n      {props.message}\r\n      <div>\r\n        <span>Like</span> {props.likeCounts}\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nlet maxLength50 = maxLengthCreator(50);\n\n\nconst MyPosts = React.memo(props => {\n\n  let postsElement = props.posts.map( p => <Post message={p.message} likeCounts={p.likeCounts} />);\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n\n  return <div className={s.content}>\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <div>\n        <AddNewPostFormRedux onSubmit={onAddPost} />\n      </div>\n      <div className={s.posts}>\n        { postsElement }\n      </div>\n    </div>\n  </div>\n});\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field className={s.postMessage} component={Textarea} name=\"newPostText\" placeholder=\"Enter your message\" validate={[required, maxLength50]} type=\"text\" />\n      </div>\n      <div><button className={s.btnMessage}>Send</button></div>\n    </form>\n  )\n}\n\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"}) (AddNewPostForm);\n\nexport default MyPosts;","import { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\n\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsConteiner = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\n\nexport default MyPostsConteiner;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ProfileInfo_item__Gcha4\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__hS0Zz\",\"descriptionBlockUser\":\"ProfileInfo_descriptionBlockUser__DmVYp\",\"aboutMe\":\"ProfileInfo_aboutMe__Zkuld\",\"userPhoto\":\"ProfileInfo_userPhoto__017xg\",\"blockInfo\":\"ProfileInfo_blockInfo__-resB\",\"statusTittle\":\"ProfileInfo_statusTittle__co339\",\"statusInput\":\"ProfileInfo_statusInput__Lzuo9\"};","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport s from './ProfileInfo.module.css';\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect( () => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activeteEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactiveteEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  const onStatusChange = (e) => {\n    setStatus(e.target.value);\n  }\n\n  return (\n    <div>\n      {!editMode &&\n        <div>\n          <span className={s.statusTittle} onDoubleClick={activeteEditMode}>{props.status || 'Status'}</span>\n        </div>\n      }\n      {editMode &&\n        <div>\n          <input className={s.statusInput} onChange={onStatusChange} onBlur={deactiveteEditMode} autoFocus={true} value={status} />\n        </div>\n      }\n    </div>\n  )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport s from './ProfileInfo.module.css';\nimport userPhoto from \"../../../img/avatar.png\";\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader />\n  }\n\n  return (\n    <div>\n      {/* <div className={s.item}>\n        <img src='https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg' alt='' />\n      </div> */}\n      <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\n      <div className={s.descriptionBlock}>\n        <img src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto} className={s.userPhoto} alt=\"\" />\n        <div className={s.descriptionBlockUser}>\n          <p className={s.aboutMe}>{props.profile.aboutMe}</p>\n          <ul className={s.blockInfo}>\n            <li>Name: {props.profile.fullName}</li>\n            <li>Facebook: {props.profile.contacts.facebook}</li>\n            <li>Website: {props.profile.contacts.website}</li>\n            <li>VK: {props.profile.contacts.vk}</li>\n            <li>Twitter: {props.profile.contacts.twitter}</li>\n            <li>Instagram: {props.profile.contacts.instagram}</li>\n            <li>YouTube: {props.profile.contacts.youtube}</li>\n            <li>GitHub: {props.profile.contacts.github}</li>\n            <li>MainLink: {props.profile.contacts.mainLink}</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default ProfileInfo;","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProflieInfo/ProfileInfo';\n\nconst Profile = (props) => {\n\n  return (\n    <div >\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n      <MyPostsContainer />\n    </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n    let userId = this.props.router.params.userId;\n    if(!userId) {\n      userId = this.props.authorisedUserId;\n      if(!userId) {\n        this.props.navigate.navigate('/login');\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId)\n  }\n\n  render() {\n    return (\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\n    )\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorisedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\n// export const withNavigate = (Component) => {\n//   let RedirectTo =(props) => {\n//       return < Component {...props} navigate={useNavigate() } />\n//  }\n//       return RedirectTo;\n//  }\n\nexport default compose(\n  connect(mapStateToProps,{getUserProfile, getStatus, updateStatus}),\n  function withRouter(Component) {\n\n    function ComponentWithRouterProp(props) {\n       let params = useParams();\n       let navigate = useNavigate();\n       return (\n          <Component\n            {...props}\n            router={{ params }}\n            navigate={{navigate} }\n          />\n       );\n    }\n\n    return ComponentWithRouterProp;\n  }\n)(ProfileContainer);","import React from \"react\";\nimport style from \"./FormsControls.module.css\";\n\nconst FormControl = ({input, meta, child, ...props}) => {\n  const hasError = meta.touched && meta.error;\n\n  return (\n    <div className={style.formControls + \" \" + (hasError ? style.error : \"\")}>\n      <div>\n        {props.children}\n      </div>\n      {hasError && <span>{meta.error}</span>}\n    </div>\n  )\n}\n\nexport const Textarea = (props) => {\n  const {input, meta, child, ...restProps} = props;\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n  const {input, meta, child, ...restProps} = props;\n  return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}","export const required = value => {\n  if (value) return undefined;\n  return \"Field is required\";\n}\n\n\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value.length > maxLength) return `Max lenght is ${maxLength} simbols`;\n  return undefined;\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__ZQHti\",\"error\":\"FormsControls_error__HG5mY\",\"formSummaryError\":\"FormsControls_formSummaryError__yRN3x\"};"],"names":["props","className","s","src","alt","message","likeCounts","maxLength50","maxLengthCreator","MyPosts","React","postsElement","posts","map","p","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","type","connect","state","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","target","value","onBlur","updateStatus","autoFocus","profile","photos","large","userPhoto","aboutMe","fullName","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","MyPostsContainer","ProfileContainer","userId","this","router","params","authorisedUserId","navigate","getUserProfile","getStatus","compose","auth","isAuth","Component","useParams","useNavigate","FormControl","input","meta","child","hasError","touched","error","style","children","restProps","Input","maxLength","length"],"sourceRoot":""}