{"version":3,"file":"static/js/76.f1ca4544.chunk.js","mappings":"+MAoCMA,GAAiBC,EAAAA,EAAAA,GAAW,CAACC,KAAM,SAAlBD,EA3BL,SAACE,GACjB,OACE,kBAAMC,SAAUD,EAAME,aAAa,WACjC,0BACE,SAAC,IAAK,CAACC,YAAa,QAASC,KAAM,QAASC,UAAWC,EAAAA,EAAOC,SAAU,CAACC,EAAAA,QAE3E,0BACE,SAAC,IAAK,CAACL,YAAa,WAAYC,KAAM,WAAYC,UAAWC,EAAAA,EAAOC,SAAU,CAACC,EAAAA,GAAWC,KAAM,gBAElG,4BACE,SAAC,IAAK,CAACA,KAAM,WAAYL,KAAM,aAAcC,UAAWC,EAAAA,IAAS,kBAGlEN,EAAMU,aAAc,gBAAKC,IAAKX,EAAMU,WAAYE,IAAI,KAEpDZ,EAAMU,aAAc,SAAC,IAAK,CAACP,YAAa,qBAAsBC,KAAM,UAAWC,UAAWC,EAAAA,EAAOC,SAAU,CAACC,EAAAA,KAE5GR,EAAMa,QAAS,gBAAKC,UAAWC,EAAAA,EAAAA,iBAAuB,SACpDf,EAAMa,SAET,0BACE,0CAIR,IAwBA,WAAeG,EAAAA,EAAAA,KALS,SAACC,GAAK,MAAM,CAClCP,WAAYO,EAAMC,KAAKR,WACvBS,OAAQF,EAAMC,KAAKC,OACpB,GAEuC,CAACC,MAAAA,EAAAA,IAAzC,EApBc,SAACpB,GAKb,OAAIA,EAAMmB,QACD,SAAC,KAAQ,CAACE,GAAI,cAGhB,4BACL,mCACA,SAACxB,EAAc,CAACI,SAVD,SAACqB,GAChBtB,EAAMoB,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,QAC/E,EAQsChB,WAAYV,EAAMU,eAE1D,G,oNChDMiB,EAAc,SAAH,GAAU,EAALC,MAAmC,IAA5BC,EAAI,EAAJA,KAAgB7B,GAAL,EAAL8B,OAAe,aAC1CC,EAAWF,EAAKG,SAAWH,EAAKhB,MAEtC,OACE,iBAAKC,UAAWC,EAAAA,EAAAA,YAAoB,KAAOgB,EAAWhB,EAAAA,EAAAA,MAAc,IAAI,WACtE,yBACGf,EAAMiC,WAERF,IAAY,0BAAOF,EAAKhB,UAG/B,EAEaqB,EAAW,SAAClC,GACvB,IAAO4B,EAAoC5B,EAApC4B,MAAuBO,GAAanC,EAA7B6B,KAA6B7B,EAAvB8B,OAAmB,OAAI9B,EAAK,IAChD,OAAO,SAAC2B,GAAW,kBAAK3B,GAAK,cAAE,uCAAc4B,GAAWO,MAC1D,EAEa7B,EAAQ,SAACN,GACpB,IAAO4B,EAAoC5B,EAApC4B,MAAuBO,GAAanC,EAA7B6B,KAA6B7B,EAAvB8B,OAAmB,OAAI9B,EAAK,IAChD,OAAO,SAAC2B,GAAW,kBAAK3B,GAAK,cAAE,oCAAW4B,GAAWO,MACvD,C,8ECxBO,IAAM3B,EAAW,SAAA4B,GACtB,IAAIA,EACJ,MAAO,mBACT,EAIaC,EAAmB,SAACC,GAAS,OAAK,SAACF,GAC9C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAS,WAEjE,CAAC,C,qBCTD,KAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wC","sources":["components/Login/login.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { required } from \"../../utils/validators/validators\";\nimport { Input } from \"../common/FormsControls/FormsControls\";\nimport { login } from \"../../redux/auth-reducer\"\nimport { Navigate } from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\n\nconst LoginForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required]} />\n      </div>\n      <div>\n        <Field placeholder={\"Password\"} name={\"password\"} component={Input} validate={[required]} type={\"password\"} />\n      </div>\n      <div>\n        <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input} /> Remember me\n      </div>\n\n      {props.captchaUrl && <img src={props.captchaUrl} alt='' />}\n\n      {props.captchaUrl && <Field placeholder={\"Symbols from image\"} name={\"captcha\"} component={Input} validate={[required]} />}\n\n      {props.error && <div className={style.formSummaryError}>\n        {props.error}\n      </div>}\n      <div>\n        <button>Login</button>\n      </div>\n    </form>\n  )\n}\n\nconst LoginReduxForm = reduxForm ({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n  }\n\n  if (props.isAuth) {\n    return <Navigate to={'/profile'} />\n  }\n\n  return <div>\n    <h1>LOGIN</h1>\n    <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n  </div>\n}\n\nconst mapStateToProps = (state) => ({\n  captchaUrl: state.auth.captchaUrl,\n  isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login} )(Login);","import React from \"react\";\nimport style from \"./FormsControls.module.css\";\n\nconst FormControl = ({input, meta, child, ...props}) => {\n  const hasError = meta.touched && meta.error;\n\n  return (\n    <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\n      <div>\n        {props.children}\n      </div>\n      {hasError && <span>{meta.error}</span>}\n    </div>\n  )\n}\n\nexport const Textarea = (props) => {\n  const {input, meta, child, ...restProps} = props;\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n  const {input, meta, child, ...restProps} = props;\n  return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}","export const required = value => {\n  if (value) return undefined;\n  return \"Field is required\";\n}\n\n\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value.length > maxLength) return `Max lenght is ${maxLength} simbols`;\n  return undefined;\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__ZQHti\",\"error\":\"FormsControls_error__HG5mY\",\"formSummaryError\":\"FormsControls_formSummaryError__yRN3x\"};"],"names":["LoginReduxForm","reduxForm","form","props","onSubmit","handleSubmit","placeholder","name","component","Input","validate","required","type","captchaUrl","src","alt","error","className","style","connect","state","auth","isAuth","login","to","formData","email","password","rememberMe","captcha","FormControl","input","meta","child","hasError","touched","children","Textarea","restProps","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}